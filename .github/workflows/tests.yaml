name: Run CCBC tests

env:
  PGPASSWORD: postgres
  PGUSER: postgres
  PGDATABASE: ccbc

on: [workflow_call]

jobs:
  jest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        working-directory: ./app
        run: yarn

      - name: Run Jest tests
        working-directory: ./app
        run: yarn test

  pgtap:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: test env setup
        uses: ./.github/actions/test-env-setup
      - name: Install pg_prove
        run: sudo cpan TAP::Parser::SourceHandler::pgTAP
        env:
          SHELL: /bin/bash
      - name: Install pgtap
        run: |
          git clone https://github.com/theory/pgtap.git
          cd pgtap
          git checkout v1.2.0
          git branch
          make
          make install
          psql -c 'CREATE EXTENSION pgtap;' || true
      - name: Run Tests
        run: pg_prove --username ${{ env.PGUSER }} --dbname ${{ env.PGDATABASE }} db/test/*/*_test.sql

  schema:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: test env setup
        uses: ./.github/actions/test-env-setup
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        working-directory: ./app
        run: yarn
      - name: Build graphql schema
        working-directory: ./app
        run: yarn build:schema
      - name: Check for inconsistency between graphql schema and commit schema
        run: git diff --exit-code || (echo 'The contents of the `schema` folder are out of sync with `app/server/schema.graphql`. Did you forget to \"yarn build:relay\"?' && false)
        working-directory: ./app
