name: Run CCBC tests

env:
  PGPASSWORD: postgres
  PGUSER: postgres
  PGDATABASE: ccbc

on: [workflow_call]

jobs:
  install-test-env:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup

  jest:
    needs: [install-test-env]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - name: Run Jest tests
        uses: ./.github/actions/jest-test

  schema:
    needs: [install-test-env]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - name: run app locally
        uses: ./.github/actions/local-app-run
      - run: yarn build:schema
        working-directory: ./app
      - name: Check for inconsistency between graphql schema and commit schema
        run: git diff --exit-code || (echo 'The contents of the `schema` folder are out of sync with `app/schema/schema.graphql`. Did you forget to \"yarn build:schema\"?' && false)

  pgtap:
    needs: [install-test-env]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: dev env setup
        uses: ./.github/actions/dev-env-setup
      - run: make stop_pg # cleanly stop the database, otherwise it will complain in the subsequent jobs
      - name: run app locally
        uses: ./.github/actions/local-app-run
      - name: Install pg_prove
        run: sudo cpan TAP::Parser::SourceHandler::pgTAP
        env:
          SHELL: /bin/bash
      - name: Install pgtap
        run: |
          git clone https://github.com/theory/pgtap.git
          cd pgtap
          git checkout v1.2.0
          git branch
          make
          make install
          psql -c 'CREATE EXTENSION pgtap;' || true
      - name: Run Database Unit Tests
        run: pg_prove --username ${{ env.PGUSER }} --dbname ${{ env.PGDATABASE }} db/test/unit/**/*_test.sql
      - name: Run Database Style Tests
        run: pg_prove --username ${{ env.PGUSER }} --dbname ${{ env.PGDATABASE }} db/test/style/*_test.sql --set schemas_to_test=ccbc_public,ccbc_private
